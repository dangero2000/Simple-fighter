void auto_fire_weapon()
{
if(wephold==0 and weapontimer1.elapsed>=weapontime1 and weapontimer2.elapsed>=weapontime2 and weapontimer3.elapsed>=weapontime3 and weapontimer4.elapsed>=weapontime4)
{
if(weaponcad==0)
{
speak("You must draw a weapon from a cadigory before fireing.");
}
else if(weaponcad==1 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/archery/"+archer+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/archery/"+archer+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
weapontimer1.restart();
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==2 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/artillery/"+shooter+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
weapontimer2.restart();
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==3 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/explosive/"+bomber+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
weapontimer3.restart();
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==4 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/melee/"+striker+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/melee/"+striker+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
weapontimer4.restart();
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==1 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/archery/"+archer+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/archery/"+archer+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
if(weaponcad==2 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/artillery/"+shooter+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
if(weaponcad==3 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/explosive/"+bomber+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
}
}
void manule_fire_weapon()
{
if(wephold==1)
{
if(weaponcad==0)
{
speak("You must draw a weapon from a cadigory before fireing.");
}
else if(weaponcad==1 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/archery/"+archer+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/archery/"+archer+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
wait(wep1delay);
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/archery/"+archer+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/archery/"+archer+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==2 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/artillery/"+shooter+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
wait(wep2delay);
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/artillery/"+shooter+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==3 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/explosive/"+bomber+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
if(ammomod>=1) ammo-=1*ammomod;
wait(wep3delay);
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/explosive/"+bomber+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==4 and fireable==true and useitems==false)
{
string[] firesfx=find_files("sounds/characters/weapons/melee/"+striker+"/*fire*");
if(firesfx.length()!=0 and firesound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/melee/"+striker+"/"+firesfx[random(0,firesfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
wait(wep4delay);
for (uint i=0; i<animals.length(); i++)
{
if(animals[i].amx<=me.x+weprange and animals[i].amy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i].animalhealth-=1;
}
}
for (uint i=0; i<enemies.length(); i++)
{
if(enemies[i].emx<=me.x+weprange and enemies[i].emy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/enemies/"+enemies[i].enemytype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/enemies/"+enemies[i].enemytype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,enemies[i].emx,enemies[i].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i].enemyhealth-=1;
}
}
for (uint i=0; i<projectiles.length(); i++)
{
if(projectiles[i].prox<=me.x+weprange and projectiles[i].proy<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/projectiles/"+projectiles[i].projtype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/projectiles/"+projectiles[i].projtype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,projectiles[i].prox,projectiles[i].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i].projhealth-=1;
}
}
for (uint i=0; i<robots.length(); i++)
{
if(robots[i].robx<=me.x+weprange and robots[i].roby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/robots/"+robots[i].robottype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/robots/"+robots[i].robottype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,robots[i].robx,robots[i].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i].robothealth-=1;
}
}
for (uint i=0; i<zombies.length(); i++)
{
if(zombies[i].zombx<=me.x+weprange and zombies[i].zomby<=me.y+weprange2)
{
string[] hitsfx=find_files("sounds/characters/weapons/melee/"+striker+"/*hit*");
if(hitsfx.length()!=0 and hitsound==1) weaponslot=p.play_extended_2d("sounds/characters/weapons/melee/"+striker+"/"+hitsfx[random(0,hitsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/npc/zombies/"+zombies[i].zombietype+"/*hurt*");
if(hurtsfx.length()!=0) p.play_extended_2d("sounds/npc/zombies/"+zombies[i].zombietype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],me.x,me.y,zombies[i].zombx,zombies[i].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i].zombiehealth-=1;
}
}
}
if(weaponcad==1 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/archery/"+archer+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/archery/"+archer+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
if(weaponcad==2 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/artillery/"+shooter+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/artillery/"+shooter+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
if(weaponcad==3 and ammo<=0)
{
string[] emptysfx=find_files("sounds/characters/weapons/explosive/"+bomber+"/*empty*");
if(emptysfx.length()!=0 and emptysound==1) weaponslot=p.play_stationary_extended("sounds/characters/weapons/explosive/"+bomber+"/"+emptysfx[random(0,emptysfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
firesound=0;
hitsound=0;
hurtsound=0;
shieldsound=0;
}
}
}