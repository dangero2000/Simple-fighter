animal@[]animals(0);
class animal
{
bool fireable, moveable, steppable;
int amsound, defsound, drawsound, falsound, painsound, tilesound, wepsound;
int animalcard;
int anihealth;
double animalhealth;
double animalmaxhealth;
int amx;
int amy;
int dammage;
int animaltime;
int firetime;
string animaltype;
timer animaltimer, firetimer;
animal(int ax,int ay,double hp,double maxhp,int ac,int dm,int ft,int sp,string at,bool amf,bool amt,bool amp)
{
this.anihealth=hp;
amx=ax;
amy=ay;
animalhealth=hp;
animalmaxhealth=maxhp;
animalcard=ac;
dammage=dm;
firetime=ft;
animaltime=sp;
animaltype=at;
fireable=amf;
moveable=amt;
steppable=amp;
string[] amsfx=find_files("sounds/npc/animals/"+animaltype+"/*taunt*");
if(amsfx.length()!=0) amsound=p.play_extended_2d("sounds/npc/animals/"+animaltype+"/"+amsfx[random(0,amsfx.length()-1)],me.x,me.y,amx,amy,0,0,0,0,true,0,0,painvolume,painpitch,false);
}
}
void animalloop()
{
for(uint i=0; i<animals.length(); i++)
{
if(animals[i].animaltimer.elapsed>=animals[i].animaltime)
{
string[] tilers=find_files("sounds/objects/platforms/"+platile+"/*step*");
if(animals[i].steppable==true and paused==0) tilesound=p.play_extended_2d("sounds/objects/platforms/"+platile+"/"+tilers[random(0,tilers.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,tilevolume,tilepitch,false);
p.update_sound_2d(animals[i].amsound,animals[i].amx,animals[i].amy);
animals[i].animaltimer.restart();
if(animals[i].amx<me.x and animals[i].moveable==true and paused==0)
{
animals[i].amx++;
}
if(animals[i].amx>me.x and animals[i].moveable==true and paused==0)
{
animals[i].amx--;
}
}
if(me.x==animals[i].amx and me.y==animals[i].amy and animals[i].firetimer.elapsed>=animals[i].firetime and animals[i].fireable==true and shieldon==1 and shieldstrength<=maxshieldstrength and paused==0)
{
string[] arqsfx=find_files("sounds/characters/shields/"+shieldtype+"/*hit*");
if(arqsfx.length()!=0 and shieldsound==1) shieldslot=p.play_stationary_extended("sounds/characters/shields/"+shieldtype+"/"+arqsfx[random(0,arqsfx.length()-1)],false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=animals[i].dammage*shieldmod;
animals[i].firetimer.restart();
}
else if(me.x==animals[i].amx and me.y==animals[i].amy and animals[i].firetimer.elapsed>=animals[i].firetime and animals[i].fireable==true and shieldon==0 and paused==0)
{
string[] hitsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*hit*");
if(hitsfx.length()!=0) animals[i].wepsound=p.play_stationary_extended("sounds/npc/animals/"+animals[i].animaltype+"/"+hitsfx[random(0,hitsfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/characters/pains/"+paintype+"/*hurt*");
if(hurtsfx.length()!=0) animals[i].painsound=p.play_stationary_extended("sounds/characters/pains/"+paintype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],false,0,0,painvolume,painpitch,false);
if(healthmod>=1) health-=animals[i].dammage*healthmod;
animals[i].firetimer.restart();
}
if(animals[i].animalhealth<=0)
{
if(animals[i].animalcard>=2 and paused==0)
{
p.play_2d("sounds/misc/deathfree.ogg", me.x, me.y, animals[i].amx, animals[i].amy, false);
animals[i].animalhealth=animals[i].anihealth;
animals[i].animalcard-=1;
}
else if(animals[i].animalcard<=1 and paused==0)
{
p.destroy_sound(animals[i].amsound);
string[] defsfx=find_files("sounds/npc/animals/"+animals[i].animaltype+"/*death*");
if(defsfx.length()!=0) animals[i].defsound=p.play_extended_2d("sounds/npc/animals/"+animals[i].animaltype+"/"+defsfx[random(0,defsfx.length()-1)],me.x,me.y,animals[i].amx,animals[i].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
if(xpmod>=1) xp+=1*xpmod;
kills+=1;
spawn_bodyfall(animals[i].amx, animals[i].amy, 1000);
animals.remove_at(i);
return;
}
}
}
}
void spawn_animal(int x,int y,double hp,double maxhp,int ac,int dm,int firetime,int animaltime,string animaltype,bool fireable,bool moveable,bool steppable)
{
animal a1(x,y,hp,maxhp,ac,dm,firetime,animaltime,animaltype,fireable,moveable,steppable);
animals.insert_last(a1);
}
void destroy_all_animals()
{
for(uint i=0; i<animals.length(); i++)
{
p.destroy_sound(animals[i].amsound);
}
animals.resize(0);
}
