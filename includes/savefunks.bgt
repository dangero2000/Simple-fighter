void readdata()
{
sd.load();
if(sd.d.exists("amtype"))
{
amtype=sd.read("amtype");
}
if(sd.d.exists("emtype"))
{
emtype=sd.read("emtype");
}
if(sd.d.exists("potype"))
{
potype=sd.read("potype");
}
if(sd.d.exists("rotype"))
{
rotype=sd.read("rotype");
}
if(sd.d.exists("zotype"))
{
zotype=sd.read("zotype");
}
if(sd.d.exists("aninum"))
{
aninum=sd.readn("aninum");
}
if(sd.d.exists("eninum"))
{
eninum=sd.readn("eninum");
}
if(sd.d.exists("projnum"))
{
projnum=sd.readn("projnum");
}
if(sd.d.exists("robnum"))
{
robnum=sd.readn("robnum");
}
if(sd.d.exists("zombnum"))
{
zombnum=sd.readn("zombnum");
}
if(sd.d.exists("gamemode"))
{
gamemode=sd.readn("gamemode");
}
if(sd.d.exists("ammo"))
{
ammo=sd.readn("ammo");
}
if(sd.d.exists("maxammo"))
{
maxammo=sd.readn("maxammo");
}
if(sd.d.exists("health"))
{
health=sd.readn("health");
}
if(sd.d.exists("maxhealth"))
{
maxhealth=sd.readn("maxhealth");
}
if(sd.d.exists("shieldstrength"))
{
shieldstrength=sd.readn("shieldstrength");
}
if(sd.d.exists("maxshieldstrength"))
{
maxshieldstrength=sd.readn("maxshieldstrength");
}
if(sd.d.exists("lifecard"))
{
lifecard=sd.readn("lifecard");
}
if(sd.d.exists("me.x"))
{
me.x=sd.readn("me.x");
}
if(sd.d.exists("me.y"))
{
me.y=sd.readn("me.y");
}
if(sd.d.exists("maxx"))
{
maxx=sd.readn("maxx");
}
if(sd.d.exists("maxy"))
{
maxy=sd.readn("maxy");
}
if(sd.d.exists("kills"))
{
kills=sd.readn("kills");
}
if(sd.d.exists("level"))
{
level=sd.readn("level");
}
if(sd.d.exists("points"))
{
points=sd.readn("points");
}
if(sd.d.exists("xp"))
{
xp=sd.readn("xp");
}
if(sd.d.exists("xprequiered"))
{
xprequiered=sd.readn("xprequiered");
}
if(sd.d.exists("facing"))
{
facing=sd.read("facing");
}
if(sd.d.exists("jumptype"))
{
jumptype=sd.read("jumptype");
}
if(sd.d.exists("paintype"))
{
paintype=sd.read("paintype");
}
if(sd.d.exists("turntype"))
{
turntype=sd.read("turntype");
}
if(sd.d.exists("platile"))
{
platile=sd.read("platile");
}
if(sd.d.exists("shieldtype"))
{
shieldtype=sd.read("shieldtype");
}
if(sd.d.exists("walltile"))
{
walltile=sd.read("walltile");
}
}
void writedata()
{
if(!directory_exists("data")) directory_create("data");
sd.add("amtype",amtype);
sd.add("emtype",emtype);
sd.add("potype",potype);
sd.add("rotype",rotype);
sd.add("zotype",zotype);
sd.add("aninum",aninum);
sd.add("eninum",eninum);
sd.add("projnum",projnum);
sd.add("robnum",robnum);
sd.add("zombnum",zombnum);
sd.add("gamemode",gamemode);
sd.add("ammo",ammo);
sd.add("maxammo",maxammo);
sd.add("health",health);
sd.add("maxhealth",maxhealth);
sd.add("shieldstrength",shieldstrength);
sd.add("maxshieldstrength",maxshieldstrength);
sd.add("lifecard",lifecard);
sd.add("me.x",me.x);
sd.add("me.y",me.y);
sd.add("maxx",maxx);
sd.add("maxy",maxy);
sd.add("kills",kills);
sd.add("level",level);
sd.add("points",points);
sd.add("xp",xp);
sd.add("xprequiered",xprequiered);
sd.add("facing",facing);
sd.add("jumptype",jumptype);
sd.add("paintype",paintype);
sd.add("turntype",turntype);
sd.add("platile",platile);
sd.add("shieldtype",shieldtype);
sd.add("walltile",walltile);
sd.save();
}
void readpreffs()
{
st.load();
if(st.d.exists("up_down"))
{
up_down=st.readn("up_down");
}
if(st.d.exists("left_right"))
{
left_right=st.readn("left_right");
}
if(st.d.exists("home_end"))
{
home_end=st.readn("home_end");
}
if(st.d.exists("wrap"))
{
wrap=st.readn("wrap");
}
if(st.d.exists("repeat_items"))
{
repeat_items=st.readn("repeat_items");
}
if(st.d.exists("numbers"))
{
numbers=st.readn("numbers");
}
if(st.d.exists("first_letter"))
{
first_letter=st.readn("first_letter");
}
if(st.d.exists("position_info"))
{
position_info=st.readn("position_info");
}
if(st.d.exists("side_scroll"))
{
side_scroll=st.readn("side_scroll");
}
if(st.d.exists("clicksound"))
{
clicksound=st.read("clicksound");
}
if(st.d.exists("edgesound"))
{
edgesound=st.read("edgesound");
}
if(st.d.exists("entersound"))
{
entersound=st.read("entersound");
}
if(st.d.exists("opensound"))
{
opensound=st.read("opensound");
}
if(st.d.exists("wrapsound"))
{
wrapsound=st.read("wrapsound");
}
}
void writepreffs()
{
if(!directory_exists("data")) directory_create("data");
st.add("up_down",up_down);
st.add("left_right",left_right);
st.add("home_end",home_end);
st.add("wrap",wrap);
st.add("repeat_items",repeat_items);
st.add("numbers",numbers);
st.add("first_letter",first_letter);
st.add("position_info",position_info);
st.add("side_scroll",side_scroll);
st.add("clicksound",clicksound);
st.add("edgesound",edgesound);
st.add("entersound",entersound);
st.add("opensound",opensound);
st.add("wrapsound",wrapsound);
st.save();
}
