bool doormove;
door@[]doors(0);
class door
{
bool ismoving=false;
double startx,starty;
double endx,endy;
int dloop;
int mvloop;
string loopsound,movesound,opensound,closesound;
int speed;
timer doortimer;
door(double sx,double sy,double ex,double ey,int sp,string lsound,string mvsound,string osound,string csound)
{
startx=sx;
starty=sy;
endx=ex;
endy=ey;
speed=sp;
loopsound=lsound;
movesound=mvsound;
opensound=osound;
closesound=csound;
dloop=p.play_2d(loopsound,me.x,me.y,startx,starty,true);
}
}
void doorcheck()
{
for(uint i=0; i<doors.length(); i++)
{
if(doors[i].startx==me.x and doors[i].starty==me.y and key_pressed(KEY_RETURN))
{
doormove=true;
doors[i].ismoving=true;
p.play_stationary(doors[i].opensound,false);
doors[i].mvloop=p.play_stationary(doors[i].movesound,true);
}
}
}
void doorloop()
{
for(uint i=0; i<doors.length(); i++)
{
if(doors[i].doortimer.elapsed>doors[i].speed and doors[i].ismoving)
{
doors[i].doortimer.restart();
if(doors[i].speed==-1)
{
me.x=doors[i].endx;
me.y=doors[i].endy;
}
if(me.x<doors[i].endx)
{
me.x++;
}
if(me.x>doors[i].endx)
{
me.x--;
}
if(me.y<doors[i].endy)
{
me.y++;
}
if(me.y>doors[i].endy)
{
me.y--;
}
if(me.x==doors[i].endx and me.y==doors[i].endy)
{
p.destroy_sound(doors[i].mvloop);
p.play_2d(doors[i].closesound,me.x,me.y,doors[i].endx,doors[i].endy,false);
doors[i].ismoving=false;
doormove=false;
}
}
}
}
void spawn_door(double x,double y,double x2,double y2,int speed,string loopsound,string movesound,string opensound,string closesound)
{
door door1(x,y,x2,y2,speed,loopsound,movesound,opensound,closesound);
doors.insert_last(door1);
}
void destroy_all_doors()
{
for(uint i=0; i<doors.length(); i++)
{
p.destroy_sound(doors[i].dloop);
}
doors.resize(0);
}
